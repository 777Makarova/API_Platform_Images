# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
#parameters:
#
#services:
#    # default configuration for services in *this* file
#    _defaults:
#        autowire: true      # Automatically injects dependencies in your services.
#        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
#
#    # makes classes in src/ available to be used as services
#    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/'
#        exclude:
#            - '../src/DependencyInjection/'
#            - '../src/Entity/'
#            - '../src/Kernel.php'
#
#    # add more service definitions when explicit configuration is needed
#    # please note that last definitions always *replace* previous ones

parameters:
    public_directory: '%kernel.project_dir%/public'
    uploads_directory: '%public_directory%/uploads'

services:
    _defaults:
        autowire: true
        autoconfigure: true
        # ...

        bind: # makes $publicPath available to all services
            $publicPath: '%public_directory%'
            $uploadPath: '%uploads_directory%'
    App\Service\File\FileUploader:
        arguments:
            $uploadPath: '%uploads_directory%'
    App\Service\File\FileResize:
        arguments:
            $uploadPath: '%uploads_directory%'
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false
